paths:
  /users:
    get:
      tags:
        - Users
      description: Get a list of users
      operationId: get
      parameters:
        - $ref: './common.yaml#/components/parameters/page'
        - $ref: './common.yaml#/components/parameters/size'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPageDTO'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: './common.yaml#/components/schemas/ApiResponseDTO'
    post:
      tags:
        - Users
      description: Create a user
      operationId: create
      requestBody:
        required: true
        description: User to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: './common.yaml#/components/schemas/ApiResponseDTO'
  /users/{id}:
    get:
      tags:
        - Users
      description: Returns a user based on a single ID
      operationId: getById
      parameters:
        - $ref: './common.yaml#/components/parameters/id'
      responses:
        200:
          description: The user found by the provided ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: './common.yaml#/components/schemas/ApiResponseDTO'
    put:
      tags:
        - Users
      description: Update a user
      operationId: update
      parameters:
        - $ref: './common.yaml#/components/parameters/id'
      requestBody:
        description: User to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: './common.yaml#/components/schemas/ApiResponseDTO'
    delete:
      tags:
        - Users
      description: Delete a user
      operationId: delete
      parameters:
        - $ref: './common.yaml#/components/parameters/id'
      responses:
        200:
          description: User deleted
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: './common.yaml#/components/schemas/ApiResponseDTO'
components:
  schemas:
    UserDTO:
      type: object
      allOf:
        - $ref: './common.yaml#/components/schemas/AbstractDTO'
        - type:
          required:
            - email
            - password
          properties:
            id:
              type: integer
              format: int64
            email:
              type: string
              format: email
              minLength: 1
            password:
              type: string
            roles:
              type: array
              items:
                $ref: './common.yaml#/components/schemas/UserRoles'
    UserPageDTO:
      type: object
      allOf:
        - $ref: './common.yaml#/components/schemas/AppPageDTO'
        - type:
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/UserDTO'